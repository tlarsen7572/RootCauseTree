<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:com.PorcupineSupernova.RootCauseTreeWpf"
        xmlns:graphing="clr-namespace:com.PorcupineSupernova.RootCauseTreeWpf.Graphing"
        xmlns:graphsharp="clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls"
        xmlns:zoom="clr-namespace:WPFExtensions.Controls;assembly=WPFExtensions"
        xmlns:core="clr-namespace:com.PorcupineSupernova.RootCauseTreeCore"
        x:Class="com.PorcupineSupernova.RootCauseTreeWpf.MainWindow"
        mc:Ignorable="d"
        Title="Arborist:" Height="480" Width="640" Loaded="Window_Loaded" WindowState="Maximized" ResizeMode="CanResizeWithGrip" Style="{StaticResource DefaultFont}">
    <Window.DataContext>
        <local:MainWindowViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <ContextMenu x:Key="ProblemMenu">
            <MenuItem Header="Edit Text" Click="EditNodeText_Click"/>
            <MenuItem Header="Add Link"  Click="StartLink_Click"/>
            <MenuItem Header="Delete Problem" Click="DeleteProblem_Click"/>
        </ContextMenu>
        <ContextMenu x:Key="CauseMenu">
            <MenuItem Header="Edit Text" Click="EditNodeText_Click"/>
            <MenuItem Header="Add Link" Click="StartLink_Click"/>
            <MenuItem Header="Delete Cause" Click="DeleteCause_Click"/>
            <MenuItem Header="Delete Cause Chain" Click="DeleteCauseChain_Click"/>
        </ContextMenu>
        <ContextMenu x:Key="EdgeMenu">
            <MenuItem Header="Remove Link" Click="RemoveLink_Click"/>
        </ContextMenu>
        <DataTemplate x:Key="VertexContent" DataType="{x:Type graphing:RootCauseVertex}">
            <Grid Margin="2" MaxWidth="200">
                <Button Margin="0,0,0,0" Click="Node_Click" Padding="3">
                    <Button.Background>
                        <SolidColorBrush Color="{Binding Path=VertexType,Converter={StaticResource VertexToColor},TargetNullValue={StaticResource ChildNode},FallbackValue={StaticResource ChildNode}}"/>
                        <!-- <SolidColorBrush Color="{StaticResource ChildNode}"/> -->
                    </Button.Background>
                    <TextBlock Name="NodeText" TextWrapping="Wrap" Text="{Binding Path=Text,StringFormat={}      {0},TargetNullValue={StaticResource FallbackString},FallbackValue={StaticResource FallbackString}}"/>
                </Button>
                <Button x:Name="GetContextMenu" HorizontalAlignment="Left" VerticalAlignment="Top" BorderBrush="{x:Null}" Click="OpenNodeMenu_Click">
                    <Button.Background>
                        <SolidColorBrush Color="{Binding Path=VertexType,Converter={StaticResource VertexToDarkColor},TargetNullValue={StaticResource ChildNodeDark},FallbackValue=1{StaticResource ChildNodeDark}}"/>
                        <!-- <SolidColorBrush Color="{StaticResource ChildNodeDark}"/> -->
                    </Button.Background>
                    <TextBlock Text="&#xE0C2;" FontFamily="Segoe UI Symbol"/>
                </Button>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="Edge" DataType="{x:Type graphing:RootCauseEdge}">
            <Grid MouseLeftButtonDown="Edge_Click"/>
        </DataTemplate>
        <Style TargetType="{x:Type graphsharp:VertexControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type graphsharp:VertexControl}">
                        <ContentPresenter Content="{TemplateBinding Vertex}" ContentTemplate="{StaticResource VertexContent}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0" Grid.ColumnSpan="2" Name="TreeContainer" MouseLeftButtonDown="TreeContainer_MouseLeftButtonDown" MouseLeftButtonUp="TreeContainer_MouseLeftButtonUp" MouseMove="TreeContainer_MouseMove" MouseWheel="TreeContainer_MouseWheel" Grid.RowSpan="4">
            <Grid.Background>
                <SolidColorBrush Color="{DynamicResource VeryLightGreen}"/>
            </Grid.Background>
            <Canvas Name="TreeCanvas">
                <Canvas.RenderTransform>
                    <MatrixTransform/>
                </Canvas.RenderTransform>
                <graphing:RootCauseGraphLayout x:Name="RootCauseLayout"
                Graph="{Binding Path=Graph,Mode=OneWay}"
                LayoutAlgorithmType="Tree"
                OverlapRemovalAlgorithmType="FSA"
                HighlightAlgorithmType="Simple"
                AnimationLength="0"
                MouseLeftButtonUp="RootCauseLayout_LeftMouseUp"
                MouseLeftButtonDown="RootCauseLayout_LeftMouseDown"
                MouseMove="RootCauseLayout_MouseMove"
            />
            </Canvas>
        </Grid>
        <GridSplitter Width="16" Name="Splitter" Grid.RowSpan="4" Margin="0">
            <GridSplitter.Background>
                <SolidColorBrush Color="{DynamicResource LightBrown}"/>
            </GridSplitter.Background>
        </GridSplitter>
        <Grid Name="MenuArea" IsEnabled="{Binding CanInteractWithMenuArea}" Margin="0,0,8,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Menu Margin="0,0,8,0" VerticalAlignment="Top" Grid.Row="0">
                <Menu.Background>
                    <SolidColorBrush Color="{DynamicResource LightBrown}"/>
                </Menu.Background>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <MenuItem x:Name="MainMenu" Header="_Menu" Padding="5,9" FontSize="12 pt">
                    <MenuItem x:Name="NewFile" Cursor="" Header="_New" Click="NewFile_Click" Style="{StaticResource DefaultFont}"/>
                    <MenuItem x:Name="OpenFile" Header="_Open" Click="OpenFile_Click" Style="{StaticResource DefaultFont}"/>
                    <MenuItem x:Name="CloseFile" Header="_Close" Click="CloseFile_Click" IsEnabled="{Binding IsFileOpen,FallbackValue=False,TargetNullValue=False}" Style="{StaticResource DefaultFont}"/>
                    <MenuItem x:Name="SaveImage" Header="_Save Tree Image" Click="SaveImage_Click" IsEnabled="{Binding CanSaveImage,FallbackValue=False,TargetNullValue=False}" Style="{StaticResource DefaultFont}"/>
                    <MenuItem x:Name="ExitApp" Header="_Exit Application" Click="ExitApp_Click" Style="{StaticResource DefaultFont}"/>
                </MenuItem>
            </Menu>
            <Grid Margin="0,0,8,0" d:LayoutOverrides="Height" Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Button IsEnabled="{Binding CanUndo}" Content="&#xE10E;" Click="Undo_Click" Padding="5" ToolTip="Undo" >
                    <Button.Background>
                        <SolidColorBrush Color="{DynamicResource DarkBrown}"/>
                    </Button.Background>
                </Button>
                <Button Grid.Column="1" Margin="0" Content="&#xE10D;" IsEnabled="{Binding CanRedo}" Click="Redo_Click" Padding="5" ToolTip="Redo">
                    <Button.Background>
                        <SolidColorBrush Color="{DynamicResource DarkBrown}"/>
                    </Button.Background>
                </Button>
            </Grid>
            <ListBox x:Name="ProblemList" Grid.Row="2" Margin="0,0,8,0" BorderBrush="{x:Null}" BorderThickness="0" ItemsSource="{Binding Path=Problems}" SelectedItem="{Binding Path=CurrentProblem,Mode=TwoWay}" SelectionMode="Single" SelectionChanged="ProblemList_SelectionChanged" >
                <ListBox.ItemTemplate>
                    <DataTemplate DataType="core:MainWindowViewModel">
                        <WrapPanel>
                            <TextBlock Text="{Binding Path=InitialProblem.Text}" />
                        </WrapPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.Background>
                    <SolidColorBrush Color="{DynamicResource LightGreen}"/>
                </ListBox.Background>
            </ListBox>
            <Button x:Name="AddProblem" Grid.Row="3" Content="&#xE109; Problem" Margin="0,0,8,0" VerticalAlignment="Bottom" BorderBrush="#FFF0F0F0" Click="AddProblem_Click" IsEnabled="{Binding IsFileOpen}" Padding="5" ToolTip="Add a new problem statement">
                <Button.Background>
                    <SolidColorBrush Color="{DynamicResource DarkGreen}"/>
                </Button.Background>
            </Button>
        </Grid>
        <Grid Name="AddLinkDialog" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="Auto" Height="Auto" Grid.Column="1" MaxWidth="200" Margin="0,0,10,10" Visibility="{Binding ShowCancelAddLink}">
            <Grid.Background>
                <SolidColorBrush Color="{StaticResource LightBrown}"/>
            </Grid.Background>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock Width="Auto" Height="Auto" TextWrapping="Wrap" Text="Select a child node to complete the link." Margin="0" Padding="5">
            </TextBlock>
            <Button Content="Cancel" IsCancel="True" Grid.Row="1" Margin="5" Padding="5" Click="CancelLink_Click"/>
            <Border Grid.RowSpan="2" Margin="0" BorderBrush="Black" BorderThickness="1"/>
        </Grid>
    </Grid>
</Window>
